apiVersion: apps/v1
kind: Deployment
metadata:  
  labels:
    name: openemr
  name: openemr
spec:
  replicas: 2
  selector:
    matchLabels:
      name: openemr
  strategy:
    type: Recreate
  template:
    metadata:      
      labels:
        name: openemr
    spec:
      initContainers:
      - name: init-mysql
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup mysql.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mysql; sleep 2; done"]
      - name: init-redis
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup redis.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for redis; sleep 2; done"]
      containers:
      - env:
        - name: MYSQL_HOST
          value: "mysql"
        - name: MYSQL_PASS
          valueFrom:
            secretKeyRef:
              name: openemr-credentials
              key: mysql-pass
        - name: MYSQL_ROOT_PASS
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: password
        - name: MYSQL_USER
          value: "openemr"
        - name: OE_PASS
          valueFrom:
            secretKeyRef:
              name: openemr-credentials
              key: admin-pass
        - name: OE_USER
          value: "admin"
        - name: REDIS_SERVER
          value: "redis"
        - name: SWARM_MODE
          value: "yes"
        image: openemr/openemr:6.0.0        
        name: openemr
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          limits:
            cpu: 1000m
            memory: 1G
        volumeMounts:
        - mountPath: /var/www/localhost/htdocs/openemr/sites
          name: websitevolume
        - mountPath: /etc/ssl
          name: sslvolume
        - mountPath: /etc/letsencrypt
          name: letsencryptvolume
      restartPolicy: Always     
      volumes:
      - name: websitevolume
        persistentVolumeClaim:
          claimName: websitevolume
      - name: sslvolume
        persistentVolumeClaim:
          claimName: sslvolume
      - name: letsencryptvolume
        persistentVolumeClaim:
          claimName: letsencryptvolume
